// https://en.wikipedia.org/wiki/Conway%27s_Game_of_Life
// https://conwaylife.com/book/#download_pdf

#include <iostream>
#include <thread>
#include <chrono>
#include <Eigen/Dense>

using Eigen::Matrix;

// (column, row)

int onoff(char c)
{

    if (c == '*')
    {
        return 1;
    }
    return 0;
}

Matrix<char, 22, 22> applyGameRules(Matrix<char, 22, 22> &Game)
{

    Matrix<char, 22, 22> Life;
    for (int ii = 0; ii < Life.rows(); ii++)
    {
        for (int jj = 0; jj < Life.cols(); jj++)
        {
            Life(ii, jj) = ' ';
        }
    }

    for (int ii = 1; ii < Game.rows() - 2; ii++)
    {

        for (int jj = 1; jj < Game.cols() - 2; jj++)
        {
            int neighborsONOFF = onoff(Game(ii - 1, jj - 1)) + onoff(Game(ii - 1, jj)) + onoff(Game(ii - 1, jj + 1)) + onoff(Game(ii, jj - 1)) + onoff(Game(ii, jj + 1)) + onoff(Game(ii + 1, jj - 1)) + onoff(Game(ii + 1, jj)) + onoff(Game(ii + 1, jj + 1));

            if (neighborsONOFF < 2 && onoff(Game(ii, jj)) == 1)
            {
                Life(ii, jj) = ' ';
            }
            if ((neighborsONOFF == 2 || neighborsONOFF == 3) && onoff(Game(ii, jj)) == 1)
            {
                Life(ii, jj) = Game(ii, jj);
            }
            if (neighborsONOFF > 3 && onoff(Game(ii, jj)) == 1)
            {
                Life(ii, jj) = ' ';
            }
            if (neighborsONOFF == 3 && onoff(Game(ii, jj)) == 0)
            {
                Life(ii, jj) = '*';
            }
        
        }
        std::cout << "\n";
    }

    return Life;
}

int main()
{
    Matrix<char, 22, 22> Game;
    Game << ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ',
            ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ',
            ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ',
            ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ',
            ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ',
            ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ',
            ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ',
            ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ',
            ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', '*', ' ', ' ', ' ',
            ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', '*', ' ', '*', ' ', ' ', ' ',
            ' ', ' ', ' ', ' ', ' ', ' ', '*', '*', ' ', ' ', ' ', ' ', ' ', ' ', '*', '*', ' ', ' ', ' ', '*', '*', ' ',
            ' ', ' ', ' ', ' ', ' ', '*', ' ', ' ', ' ', '*', ' ', ' ', ' ', ' ', '*', '*', ' ', ' ', ' ', '*', '*', ' ',
            ' ', '*', '*', ' ', '*', ' ', ' ', ' ', ' ', ' ', '*', ' ', ' ', ' ', '*', '*', ' ', ' ', ' ', ' ', ' ', ' ',
            ' ', '*', '*', ' ', '*', ' ', ' ', ' ', '*', ' ', '*', '*', ' ', ' ', ' ', ' ', '*', ' ', '*', ' ', ' ', ' ',
            ' ', ' ', ' ', ' ', '*', ' ', ' ', ' ', ' ', ' ', '*', ' ', ' ', ' ', ' ', ' ', ' ', ' ', '*', ' ', ' ', ' ',
            ' ', ' ', ' ', ' ', ' ', '*', ' ', ' ', ' ', '*', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ',
            ' ', ' ', ' ', ' ', ' ', ' ', '*', '*', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ',
            ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ',
            ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ',
            ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ',
            ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ',
            ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ';

    for (int ii = 0; ii < 100; ii++)
    {
        Matrix<char, 22, 22> nextGame = applyGameRules(Game);
        system("clear");
        std::cout << nextGame << "\n";
        Game = nextGame;
        std::this_thread::sleep_for(std::chrono::milliseconds(500));
    }
}